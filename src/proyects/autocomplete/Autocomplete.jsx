import React, { useState } from 'react';
import './Autocomplete.css'; // Aseg√∫rate de tener este archivo para los estilos

const Autocomplete = () => {
  const options = [
    'Manzana', 'Banana', 'Naranja', 'Uvas', 'Fresa', 'Pi√±a', 'Ar√°ndano', 'Mango', 'Mel√≥n',
    'Pera', 'Cereza', 'Durazno', 'Sand√≠a', 'Frambuesa', 'Kiwi', 'Papaya', 'Lima', 'Lim√≥n',
    'Lechuga', 'Tomate', 'Cebolla', 'Zanahoria', 'Pepino', 'Espinaca', 'Br√≥coli', 'Coliflor',
    'Ajo', 'Pimiento', 'Calabac√≠n', 'Berenjena', 'Ch√≠charo', 'Papa', 'Camote', 'Jitomate',
    'Pollo', 'Carne de res', 'Cerdo', 'Pescado', 'Camarones', 'Chuletas de cerdo', 'Salchichas',
    'Tocino', 'Jam√≥n', 'Pavo', 'At√∫n', 'Salm√≥n', 'Tilapia',
    'Leche', 'Yogur', 'Queso', 'Mantequilla', 'Crema', 'Queso crema', 'Leche de almendra',
    'Leche de soja', 'Helado',
    'Pan', 'Arroz', 'Pasta', 'Harina', 'Tortillas', 'Avena', 'Quinoa', 'Cereal', 'Frijoles',
    'Garbanzos', 'Lentejas', 'Harina de ma√≠z',
    'Huevos', 'Az√∫car', 'Sal', 'Aceite de oliva', 'Vinagre', 'Miel', 'Caf√©', 'T√©', 'Jugo de naranja',
    'Refresco', 'Agua mineral', 'Cerveza', 'Vino',
    'Galletas', 'Chocolate', 'Caramelos', 'Papitas', 'Palomitas', 'Nueces', 'Almendras', 'Pasas',
    'Shampoo', 'Jab√≥n', 'Papel higi√©nico', 'Pasta de dientes', 'Detergente', 'Suavizante',
    'Toallas de cocina', 'Bolsas de basura', 'Limpiador multiusos', 'Esponjas'
  ];

  const [inputValue, setInputValue] = useState('');
  const [filteredOptions, setFilteredOptions] = useState([]);
  const [activeOption, setActiveOption] = useState(0);
  const [showOptions, setShowOptions] = useState(false);
  const [shoppingList, setShoppingList] = useState([]);

  const handleInputChange = (event) => {
    const value = event.target.value;
    setInputValue(value);
    setFilteredOptions(
      options.filter((option) =>
        option.toLowerCase().includes(value.toLowerCase()) && !shoppingList.includes(option)
      )
    );
    setActiveOption(0);
    setShowOptions(true);
  };

  const handleOptionClick = (option) => {
    if (!shoppingList.includes(option)) {
      setShoppingList([...shoppingList, option]);
    }
    setInputValue('');
    setShowOptions(false);
  };

  const handleKeyDown = (e) => {
    if (e.key === 'ArrowDown') {
      setActiveOption((prevActive) => (prevActive === filteredOptions.length - 1 ? 0 : prevActive + 1));
    } else if (e.key === 'ArrowUp') {
      setActiveOption((prevActive) => (prevActive === 0 ? filteredOptions.length - 1 : prevActive - 1));
    } else if (e.key === 'Enter') {
      if (showOptions && filteredOptions.length > 0) {
        handleOptionClick(filteredOptions[activeOption]);
      }
    } else if (e.key === 'Escape') {
      setShowOptions(false);
    }
  };

  const handleRemoveItem = (item) => {
    setShoppingList(shoppingList.filter((i) => i !== item));
  };

  return (
    <div className="autocomplete-container">
      <input
        type="text"
        value={inputValue}
        onChange={handleInputChange}
        onKeyDown={handleKeyDown}
        className="autocomplete-input"
        placeholder="Escribe para buscar..."
      />
      {showOptions && inputValue && (
        <ul className="autocomplete-options">
          {filteredOptions.length > 0 ? (
            filteredOptions.map((option, index) => (
              <li
                key={index}
                className={index === activeOption ? 'option active' : 'option'}
                onClick={() => handleOptionClick(option)}
              >
                {option}
              </li>
            ))
          ) : (
            <li className="no-option">No hay opciones disponibles</li>
          )}
        </ul>
      )}
      <div className="shopping-list-container">
        <h4>Lista de la compra:</h4>
        <p>Qu√© necesito para esta semana? ü§îüìù</p>
        {shoppingList.length > 0 ? (
          <ul className="shopping-list">
            {shoppingList.map((item, index) => (
              <li key={index}>
                {item}
                <button onClick={() => handleRemoveItem(item)} className="remove-btn">Eliminar</button>
              </li>
            ))}
          </ul>
        ) : (
          <p>No has a√±adido productos a√∫n.</p>
        )}
      </div>
    </div>
  );
};

export default Autocomplete;
